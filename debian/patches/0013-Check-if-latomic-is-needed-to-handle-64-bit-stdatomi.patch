From: Evan Hunt <each@isc.org>
Date: Tue, 7 Nov 2017 13:27:48 -0800
Subject: Check if -latomic is needed to handle 64-bit stdatomic.h types

4809.	[port]		Check at configure time whether -latomic is needed
			for stdatomic.h. [RT #46324]

(cherry picked from commit e3d9aafff0f2749469d5edf6dacd4ecf2f7224c0)
---
 configure    | 37 +++++++++++++++++++++++++++++++++++--
 configure.in | 21 +++++++++++++++++++--
 2 files changed, 54 insertions(+), 4 deletions(-)

diff --git a/configure b/configure
index 5acc4de..ecba61d 100755
--- a/configure
+++ b/configure
@@ -20137,6 +20137,7 @@ done
 #
 # Machine architecture dependent features
 #
+have_stdatomic=no
 for ac_header in stdatomic.h
 do :
   ac_fn_c_check_header_mongrel "$LINENO" "stdatomic.h" "ac_cv_header_stdatomic_h" "$ac_includes_default"
@@ -20144,9 +20145,11 @@ if test "x$ac_cv_header_stdatomic_h" = xyes; then :
   cat >>confdefs.h <<_ACEOF
 #define HAVE_STDATOMIC_H 1
 _ACEOF
- ISC_PLATFORM_HAVESTDATOMIC="#define ISC_PLATFORM_HAVESTDATOMIC 1"
+ have_stdatomic=yes
+		  ISC_PLATFORM_HAVESTDATOMIC="#define ISC_PLATFORM_HAVESTDATOMIC 1"
 else
-  ISC_PLATFORM_HAVESTDATOMIC="#undef ISC_PLATFORM_HAVESTDATOMIC"
+  have_stdatomic=no
+		  ISC_PLATFORM_HAVESTDATOMIC="#undef ISC_PLATFORM_HAVESTDATOMIC"
 fi
 
 done
@@ -20227,12 +20230,42 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 		esac
 		;;
 	no)
+	        have_stdatomic=no
 		ISC_PLATFORM_HAVESTDATOMIC="#undef ISC_PLATFORM_HAVESTDATOMIC"
 		use_atomic=no
 		arch=noatomic
 		;;
 esac
 
+if test "X$have_stdatomic" = "Xyes"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if -latomic is needed to use 64-bit stdatomic.h primitives" >&5
+$as_echo_n "checking if -latomic is needed to use 64-bit stdatomic.h primitives... " >&6; }
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdatomic.h>
+int
+main ()
+{
+atomic_int_fast64_t val = 0; atomic_fetch_add_explicit(&val, 1, memory_order_relaxed);
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+	 ISC_ATOMIC_LIBS=""
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+	 ISC_ATOMIC_LIBS="-latomic"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+    LIBS="$LIBS $ISC_ATOMIC_LIBS"
+fi
+
 
 
 ISC_PLATFORM_USEOSFASM="#undef ISC_PLATFORM_USEOSFASM"
diff --git a/configure.in b/configure.in
index 9585f4d..1571bcb 100644
--- a/configure.in
+++ b/configure.in
@@ -3947,9 +3947,12 @@ AC_CHECK_FUNCS(nanosleep usleep)
 #
 # Machine architecture dependent features
 #
+have_stdatomic=no
 AC_CHECK_HEADERS(stdatomic.h,
-		 [ISC_PLATFORM_HAVESTDATOMIC="#define ISC_PLATFORM_HAVESTDATOMIC 1"],
-		 [ISC_PLATFORM_HAVESTDATOMIC="#undef ISC_PLATFORM_HAVESTDATOMIC"])
+		 [have_stdatomic=yes
+		  ISC_PLATFORM_HAVESTDATOMIC="#define ISC_PLATFORM_HAVESTDATOMIC 1"],
+		 [have_stdatomic=no
+		  ISC_PLATFORM_HAVESTDATOMIC="#undef ISC_PLATFORM_HAVESTDATOMIC"])
 
 AC_ARG_ENABLE(atomic,
 	[  --enable-atomic	  enable machine specific atomic operations
@@ -3993,12 +3996,26 @@ case "$enable_atomic" in
 		esac
 		;;
 	no)
+	        have_stdatomic=no
 		ISC_PLATFORM_HAVESTDATOMIC="#undef ISC_PLATFORM_HAVESTDATOMIC"
 		use_atomic=no
 		arch=noatomic
 		;;
 esac
 
+if test "X$have_stdatomic" = "Xyes"; then
+    AC_MSG_CHECKING(if -latomic is needed to use 64-bit stdatomic.h primitives)
+    AC_LINK_IFELSE(
+	[AC_LANG_PROGRAM([#include <stdatomic.h>],
+			 [atomic_int_fast64_t val = 0; atomic_fetch_add_explicit(&val, 1, memory_order_relaxed);])],
+	[AC_MSG_RESULT(no)
+	 ISC_ATOMIC_LIBS=""],
+	[AC_MSG_RESULT(yes)
+	 ISC_ATOMIC_LIBS="-latomic"]
+    )
+    LIBS="$LIBS $ISC_ATOMIC_LIBS"
+fi
+
 AC_SUBST(ISC_PLATFORM_HAVESTDATOMIC)
 
 ISC_PLATFORM_USEOSFASM="#undef ISC_PLATFORM_USEOSFASM"
